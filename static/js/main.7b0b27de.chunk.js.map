{"version":3,"sources":["Search/Header.js","Search/Input.js","Search/index.js","Result/Movie.js","Result/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Container","Title","React","Component","styled","div","_templateObject","span","_templateObject2","Object","defineProperty","HAS_RESULT","TOO_MANY","Input","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","recentSearchs","inputValue","isInputFocused","results","showAutocomplete","requestSource","str","_this2","setState","JSON","parse","cookie","get","source","axios","CancelToken","cancel","concat","cancelToken","token","then","resp","console","log","data","Search","_this3","Input_Container","SearchInput","onFocus","e","onBlur","value","onChange","onInputValueChange","target","Go","onClick","onClickSearch","AutoComplete","ResultTitle","map","item","index","ResultItem","key","filter","toLowerCase","includes","Input_templateObject","input","Input_templateObject2","label","_templateObject3","_templateObject4","_templateObject5","button","_templateObject6","_templateObject7","Search_Container","Search_Header","Search_Input","Search_templateObject","Movie","Root","Movie_Title","title","Year","year","Poster","src","posterUrl","alt","Movie_templateObject","Movie_templateObject2","Movie_templateObject3","img","Movie_templateObject4","Result","Result_Root","Result_Container","Result_Title","Results","list","Result_Movie","Result_templateObject","Result_templateObject2","Result_templateObject3","Result_templateObject4","App","searchResult","currentPage","_ref","set","toConsumableArray","url","totalResults","allSearchResult","pages","Math","ceil","promises","i","push","Promise","all","result","reduce","accu","curr","Pager","SearchPage","src_Search","_ref2","search","ResultPage","src_Result","App_templateObject","App_templateObject2","App_templateObject3","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b0b27de.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Title>Find me a movie</Title>\n      </Container>\n    )\n  }\n}\n\nconst Container = styled.div`\n  height: 35px;\n  background: #2e9127;\n  font-size: 14px;\n  color: white;\n  letter-spacing: 0.05em;\n  font-weight: bold;\n  line-height: 1.42857;\n  font-family: proxima, BloggerSans, sans-serif;\n  text-transform: uppercase;\n  display: flex;\n  align-items: center;\n  width: 300px;\n  border-radius: 8px 8px 0px 0px;\n`\n\nconst Title = styled.span`\n  margin-left: 18px;\n`\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components'\n\nimport axios from 'axios'\nimport cookie from 'js-cookie'\n\nconst RESULT_STATE = {\n  HAS_RESULT: 'HAS_RESULT',\n  TOO_MANY: 'HAS_RESULT',\n  TOO_MANY: 'HAS_RESULT',\n}\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  state = {\n    recentSearchs: [],\n    inputValue: '',\n    isInputFocused: false,\n    results: [],\n    // showAutocomplete: false\n    showAutocomplete: false\n  }\n\n  requestSource = null\n\n  onInputValueChange(str) {\n    this.setState({\n      recentSearchs: JSON.parse(cookie.get('recent-searchs') || '[]')\n    })\n\n    this.setState({ inputValue: str })\n\n    // Be aware of fast-typing scenario, the result should match the current text in the search bar.\n    const { CancelToken } = axios;\n    const source = CancelToken.source()\n\n    if (this.requestSource !== null) {\n      this.requestSource.cancel('cancel by ' + str)\n    }\n\n    this.requestSource = source\n\n    axios.get(`https://www.omdbapi.com/?s=${str}&apikey=68def545`, {\n      cancelToken: source.token\n    })\n      .then(resp => {\n        console.log(resp.data);\n        this.setState({\n          results: resp.data.Search || []\n        })\n      })\n  }\n\n  render() {\n    return (\n      <Container>\n        <SearchInput\n          onFocus={ e => this.setState({ isInputFocused: true, showAutocomplete: true }) }\n          onBlur={ e => this.setState({ isInputFocused: false }) }\n          value={ this.state.inputValue }\n          onChange={ (e) => this.onInputValueChange(e.target.value) }\n        >\n        </SearchInput>\n\n        <Go\n          onClick={\n            e => this.props.onClickSearch({ str: this.state.inputValue })\n          }\n        >\n          GO\n        </Go>\n\n        {/* { this.state.isInputFocused && (\n          <AutoComplete>\n            <AutoCompleteTitle>Recent Searchs</AutoCompleteTitle>\n            <ResultTitle>Recent Searchs</ResultTitle>\n          </AutoComplete>\n        )} */}\n\n        { this.state.showAutocomplete && (\n          <AutoComplete>\n            <ResultTitle>Results</ResultTitle>\n            {\n              this.state.results.map((item, index) => {\n                return (\n                  <ResultItem\n                    key={ index } // imDB id is not uniq\n                    onClick={ () => {\n                        console.log('onClick')\n                        this.setState({ inputValue: item.Title }, () => {\n                          console.log(this.state.inputValue)\n                          this.onInputValueChange(this.state.inputValue)\n                        })\n                      }\n                    }\n                  >\n                    {item.Title}\n                  </ResultItem>\n                )\n              })\n            }\n\n            <ResultTitle>Recent Searchs</ResultTitle>\n            {\n              this.state.recentSearchs.filter(str => {\n                return str.toLowerCase().includes(this.state.inputValue.toLowerCase())\n              }).map((item, index) => {\n                return (\n                  <ResultItem\n                    key={ index }\n                    onClick={ () => {\n                        this.setState({ inputValue: item }, () => {\n                          this.onInputValueChange(item)\n                        })\n                      }\n                    }\n                  >\n                    {item}\n                  </ResultItem>\n                )\n              })\n            }\n          </AutoComplete>)\n        }\n      </Container>\n    )\n  }\n}\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 100%;\n`\nconst SearchInput = styled.input`\n  font-family: proxima, BloggerSans, sans-serif;\n  width: 200px;\n  height: 40px;\n  border-radius: 6px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0;\n\n  outline: none !important;\n  padding-left: 20px;\n  font-size: 18px;\n\n  &:focus {\n    border: 1px solid rgba(75, 135, 175);\n  }\n`\n\nconst AutoComplete = styled.label`\n  position: absolute;\n  width: 222px;\n  top: 58px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 8px 12px 0px;\n  border-radius: 0px 0px 6px 6px;\n  background: white;\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\n  min-height: 50px;\n  max-height: 200px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  padding-bottom: 5px;\n`\n\nconst AutoCompleteTitle = styled.div`\n  border-bottom: 1px solid rgb(55, 171, 46);\n  margin-left: 15px;\n  color: rgb(46, 145, 39);\n  padding-top: 10px;\n  padding-bottom: 5px;\n`\n\nconst ResultTitle = styled.div`\n  border-bottom: 1px solid rgb(55, 171, 46);\n  margin-left: 15px;\n  color: rgb(46, 145, 39);\n  padding-top: 10px;\n  padding-bottom: 5px;\n  margin-bottom: 5px;\n`\n\nconst Go = styled.button`\n  width: 40px;\n  height: 40px;\n  margin-left: 10px;\n`\n\nconst ResultItem = styled.div`\n  color: rgb(74, 74, 74);\n  width: 100%;\n  padding-left: 20px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  cursor: pointer;\n\n  &:hover {\n    background: #eeeeee;\n  }\n`\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components'\n\nimport Header from './Header'\nimport Input from './Input'\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <Container>\n        <Header></Header>\n        <Input onClickSearch={ this.props.onClickSearch }></Input>\n      </Container>\n    )\n  }\n}\n\nconst Container = styled.div`\n  background: white;\n  width: 300px;\n  height: 112px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nexport default Search;\n","import React from 'react';\nimport styled from 'styled-components'\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <Root>\n        <Title>{ this.props.title }</Title>\n        <Year>Y: { this.props.year }</Year>\n        <Poster src={ this.props.posterUrl === 'N/A' ? 'https://static.amazon.jobs/teams/53/thumbnails/IMDb_Jobs_Header_Mobile.jpg?1501027253' : this.props.posterUrl } alt=\"no poster available\"></Poster>\n      </Root>\n    );\n  }\n}\n\nconst Root = styled.div`\n  width: 400px;\n  height: 200px;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid rgb(238, 238, 238);\n\n  &:last-child {\n    border: 0;\n  }\n`\n\nconst Title = styled.div`\n  color: rgb(55, 171, 46);\n  font-size: 25px;\n  flex-basis: 45%;\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  padding: 10px;\n`\n\nconst Year = styled.div`\n  color: rgb(74, 74, 74);\n  width: 20%;\n`\n\nconst Poster = styled.img`\n  height: 150px;\n  border-radius: 4px;\n  width: 25%;\n`\n\nexport default Movie;\n","import React from 'react';\nimport styled from 'styled-components'\n\nimport Movie from './Movie'\n\nclass Result extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <Root>\n        <Container>\n          <Title>Suggested Movies</Title>\n          <Results>\n            {\n              this.props.list.map((item, index) => {\n                return (\n                  <Movie\n                    title={ item.Title }\n                    year={ item.Year }\n                    posterUrl={ item.Poster }\n                    key={ index } // imDB id is not uniq\n                  />\n                )\n              })\n            }\n          </Results>\n        </Container>\n      </Root>\n    );\n  }\n}\n\nconst Root = styled.div`\n  width: 100%;\n  height: 100%;\n  background: rgb(55, 171, 46);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Container = styled.div`\n  width: 900px;\n  max-width: 85%;\n  min-width: 500px;\n  padding-bottom: 100px;\n  padding-top: 60px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Title = styled.div`\n  font-size: 18px;\n  color: white;\n  padding-bottom: 20px;\n`\n\nconst Results = styled.div`\n  width: 400px;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  background: white;\n`\n\nexport default Result;\n","import React from 'react';\nimport styled from 'styled-components'\n\nimport Search from './Search/index'\nimport Result from './Result/index'\n\nimport axios from 'axios'\nimport cookie from 'js-cookie'\n\nclass App extends React.Component {\n  state = {\n    searchResult: [],\n    currentPage: 0,\n    // currentPage: 1,\n  }\n\n  search({ str }) {\n    const recentSearchs = JSON.parse(cookie.get('recent-searchs') || '[]')\n    if (!recentSearchs.includes(str)) {\n      cookie.set('recent-searchs', [...recentSearchs, str])\n    }\n\n    const url = 'https://www.omdbapi.com'\n    axios.get(`${url}/?s=${str}&apikey=68def545`)\n      .then(resp => {\n        if (resp.data.totalResults) {\n          const pages = Math.ceil(resp.data.totalResults / 10)\n          const promises = []\n\n          for (let i = 1; i <= pages; i++) {\n            promises.push(axios.get(`${url}/?s=${str}&apikey=68def545&page=${i}`))\n          }\n\n          let allSearchResult\n\n          Promise.all(promises)\n            .then(result => {\n              allSearchResult = result.reduce((accu, curr) => {\n                accu = [...accu, ...curr.data.Search]\n                return accu\n              }, [])\n\n              console.log('allSearchResult', allSearchResult)\n\n              this.setState({\n                searchResult: allSearchResult\n              })\n            })\n        }\n      })\n  }\n\n  render() {\n    return (\n      <Pager>\n        <SearchPage>\n          <Search\n            onClickSearch={({ str }) => this.search({ str }) }\n          />\n        </SearchPage>\n        <ResultPage>\n          <Result\n            list={this.state.searchResult}\n          >\n          </Result>\n        </ResultPage>\n      </Pager>\n    );\n  }\n}\n\nconst Pager = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n`\n\nconst SearchPage = styled.div`\n  background: #37ab2e;\n  width: 50%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst ResultPage = styled.div`\n  background: #37ab2e;\n  width: 50%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: auto;\n`\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}